{"version":3,"file":"component---src-templates-blog-post-js-7b8200c06c3be90ac7aa.js","mappings":"iPAQA,MAqEaA,EAAOC,IAAyC,IAAtCC,MAAQC,eAAgBC,IAAQH,EACrD,OACEI,EAAAA,cAACC,EAAAA,EAAG,CACFC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,aAAeL,EAAKM,SAClD,EAIN,UA9EyBC,IAGlB,IAFLT,MAAM,SAAEU,EAAQ,KAAEC,EAAI,KAAEC,EAAMX,eAAgBC,GAAM,SACpDW,GACDJ,EACC,MAAMK,EAAYF,EAAKG,aAAaV,OAC9B,MAAEA,EAAK,KAAEW,EAAI,KAAEC,GAASf,EAAKI,YACnC,OACEH,EAAAA,cAACe,EAAAA,EAAM,CAACL,SAAUA,EAAUR,MAAOS,GACjCX,EAAAA,cAAA,WACEgB,UAAU,YACVC,WAAS,EACTC,SAAS,6BAETlB,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAImB,SAAS,YAAYjB,GACzBF,EAAAA,cAAA,SAAIa,IAENb,EAAAA,cAAA,WACEoB,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCH,SAAS,gBAEVL,GACCd,EAAAA,cAAA,SACEA,EAAAA,cAAA,YAAM,UACNA,EAAAA,cAAA,MAAIuB,MAAO,CAAEC,cAAe,OAAQC,QAAS,WAC1CX,EAAKY,KAAI,CAACC,EAAKC,IACd5B,EAAAA,cAAA,MAAIuB,MAAO,CAAEE,QAAS,UAAYI,IAAKF,GACrC3B,EAAAA,cAAC8B,EAAAA,KAAI,CAACC,GAAE,SAAWC,IAAUL,IAASA,GACrCC,EAAQd,EAAKmB,OAAS,EAAI,KAAO,QAM5CjC,EAAAA,cAAA,WACAA,EAAAA,cAAA,cACEA,EAAAA,cAACkC,EAAAA,EAAG,QAGRlC,EAAAA,cAAA,OAAKgB,UAAU,iBACbhB,EAAAA,cAAA,MACEuB,MAAO,CACLE,QAAQ,OACRU,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGXtC,EAAAA,cAAA,WACGO,aAAQ,EAARA,EAAUgC,YACTvC,EAAAA,cAAC8B,EAAAA,KAAI,CAACC,GAAIxB,EAASiC,OAAOC,KAAMC,IAAI,QAAO,KACtCnC,EAASJ,YAAYD,QAI9BF,EAAAA,cAAA,WACGQ,aAAI,EAAJA,EAAM+B,YACLvC,EAAAA,cAAC8B,EAAAA,KAAI,CAACC,GAAIvB,EAAKgC,OAAOC,KAAMC,IAAI,QAC7BlC,EAAKL,YAAYD,MAAM,SAM3B,C","sources":["webpack://gatsby-starter-blog/./src/templates/blog-post.js"],"sourcesContent":["import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogPostTemplate = ({\n  data: { previous, next, site, markdownRemark: post },\n  location,\n}) => {\n  const siteTitle = site.siteMetadata.title\n  const { title, date, tags } = post.frontmatter\n  return (\n    <Layout location={location} title={siteTitle}>\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{title}</h1>\n          <p>{date}</p>\n        </header>\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n        {tags && (\n          <p>\n            <span>Tags: </span>\n            <ul style={{ listStyleType: \"none\", display: \"inline\" }}>\n              {tags.map((tag, index) => (\n                <li style={{ display: \"inline\" }} key={tag}>\n                  <Link to={`/tags/${kebabCase(tag)}`}>{tag}</Link>\n                  {index < tags.length - 1 ? \", \" : \"\"}\n                </li>\n              ))}\n            </ul>\n          </p>\n        )}\n        <hr />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous?.published && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next?.published && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport const Head = ({ data: { markdownRemark: post } }) => {\n  return (\n    <Seo\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["Head","_ref2","data","markdownRemark","post","React","Seo","title","frontmatter","description","excerpt","_ref","previous","next","site","location","siteTitle","siteMetadata","date","tags","Layout","className","itemScope","itemType","itemProp","dangerouslySetInnerHTML","__html","html","style","listStyleType","display","map","tag","index","key","Link","to","kebabCase","length","Bio","flexWrap","justifyContent","listStyle","padding","published","fields","slug","rel"],"sourceRoot":""}